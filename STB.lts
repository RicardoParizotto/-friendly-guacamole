const TEMPO = 4
const THRESHOLD = 3
const CAPACIDADE = 5


//Nenhuma mala advinda de check in atinge a esteira local - SAFETY;
//essa esta sendo violado
assert P1 = []( c_entra_sistema -> [](!v_encaminha_esteira_recolhimento))


//Em algum momento as malas saem do sistema - LIVENESS;
assert P2 = []((c_entra_sistema || v_entra_sistema) -> <> (v_saindo || c_saindo) )


//Todas as malas, em algum momento, passam pela inspeção de segurança - LIVENESS;
assert P3 = []((c_entra_sistema || v_entra_sistema) -> <> X (v_em_inspecao || c_em_inspecao))

//------------------------------------FIM PROPRIEDADES-----------------------------

MALA_CHECKIN = (c_entra_sistema -> c_identificada -> c_em_inspecao -> c_saindo -> END).
MALA_VOO = (v_entra_sistema -> v_em_inspecao -> v_saindo -> END).

/*meio de entrada das bagagens*/
ENTRADA_CHECKIN = (c_checkin -> c_identifica_mala -> c_encaminha_esteira_inspecao -> ENTRADA_CHECKIN).
ENTRADA_VOO = (v_desembarque_mala -> v_encaminha_esteira_inspecao -> ENTRADA_VOO).

/*inspecao*/
INSPECAO_CHECKIN = (c_chega_inspecao -> c_inspeciona -> ( c_aprovado_inspecao -> c_encaminha_seletor -> INSPECAO_CHECKIN | c_reprovado_inspecao -> c_encaminha_ressalva -> INSPECAO_CHECKIN)).
INSPECAO_VOO = (v_chega_inspecao -> v_inspeciona-> ( v_aprovado_inspecao -> v_encaminha_seletor -> INSPECAO_VOO | v_reprovado_inspecao -> v_encaminha_ressalva -> INSPECAO_VOO)).

/*selecao*/
SELECAO_CHECKIN = (c_chega_selecao -> c_le_identificador -> c_encaminha_voo -> SELECAO_CHECKIN).
SELECAO_VOO = (v_chega_selecao -> v_le_identificador -> {v_encaminha_voo , v_encaminha_esteira_recolhimento} -> SELECAO_VOO).

/*esteira recolhimento*/
ESTEIRA_RECOLHIMENTO = (chega_esteira_recolhimento -> ESTEIRA_RECOLHIMENTO[0]),
ESTEIRA_RECOLHIMENTO[t:0..TEMPO] = ( when (t <  TEMPO) espera -> ESTEIRA_RECOLHIMENTO[t+1]
                                   | when (t <= TEMPO) retirada -> END
                                   | when (t == TEMPO) objeto_perdido -> END ).

RESSALVA = (chega_mala -> RESSALVA[0]),
RESSALVA[c:0..CAPACIDADE]= (when (THRESHOLD*8/10 == c) alarme -> chega_mala ->  RESSALVA[c+1]
						  | when (CAPACIDADE == c) encaminha_exterior -> RESSALVA
                          | when (CAPACIDADE > c && THRESHOLD*8/10 != c) chega_mala -> RESSALVA[c+1]).

|| STB = ( ec:ENTRADA_CHECKIN || ev:ENTRADA_VOO || ic:INSPECAO_CHECKIN || iv:INSPECAO_VOO || sc:SELECAO_CHECKIN || sv:SELECAO_VOO || er:ESTEIRA_RECOLHIMENTO || r:RESSALVA || mv:MALA_VOO || mc:MALA_CHECKIN)
/{
  ec.c_encaminha_esteira_inspecao/ic.c_chega_inspecao,
  ev.v_encaminha_esteira_inspecao/iv.v_chega_inspecao,
  ic.c_encaminha_seletor/sc.c_chega_selecao,
  iv.v_encaminha_seletor/sv.v_chega_selecao,
  ic.c_encaminha_ressalva/r.chega_mala,
  iv.v_encaminha_ressalva/r.chega_mala,
  sv.v_encaminha_esteira_recolhimento/er.chega_esteira_recolhimento,
  mv.v_em_inspecao/iv.v_inspeciona,
  mv.v_entra_sistema/ev.v_desembarque_mala,
  {sv.v_encaminha_voo,er.retirada,er.objeto_perdido,iv.v_encaminha_ressalva}/mv.v_saindo,
  mc.c_em_inspecao/ic.c_inspeciona,
  mc.c_entra_sistema/ec.c_checkin,
  mc.c_identificada/ec.c_identifica_mala,
  {ic.c_encaminha_ressalva,mc.c_saindo}/sc.c_encaminha_voo
}.
